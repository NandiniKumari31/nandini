class Node:
    def __init__(self,d):
        self.data=d
        self.next=None
class circularQueue:
    def __init__(self):
        self.front=None
        self.rear=None
    def enqueue(self,v):
        New_node=Node(v)
        if not self.rear:
            self.front=self.rear=New_node
            self.rear.next=self.front
            #self.front.next=self.rear
        self.rear.next=New_node
        New_node.next=self.front
        self.rear=New_node
    def dequeue(self):
        if not self.front:
            print("empty Queue")
        if self.front==self.rear:
            self.front=self.rear=None
            return
        self.front=self.front.next
        self.rear.next=self.front
        return
    def trace(self):
        current=self.front
        count=0
        if not current:
            print("Queue empty")
        while True:
            print(current.data,end="<--")
            current=current.next
            
            if current==self.front:
                print("malli repeat avuthundhi")
                break
c=circularQueue()
c.enqueue(10)
c.enqueue(20)
c.enqueue(30)
c.trace()
c.dequeue()
c.trace()
